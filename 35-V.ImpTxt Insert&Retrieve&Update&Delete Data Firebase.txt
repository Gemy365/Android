// activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    tools:context=".MainActivity">


    <Button
        android:id="@+id/btn_sign_up"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="20dp"
        android:text="Your Data" />

    <Button
        android:id="@+id/btn_store_data"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Sign Up" />


</LinearLayout>

----------------------------------------------------------------------------------------------------------------
// MainActivity.java

package com.example.android.firebaselearn;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.Toast;

import com.example.android.firebaselearn.Model.Info;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    // Init Views Btns.
    Button RetrieveDataBtn;
    Button SignUpBtn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Get Views By IDs.
        RetrieveDataBtn = (Button) findViewById(R.id.btn_sign_up);
        SignUpBtn = (Button) findViewById(R.id.btn_store_data);

        // When Click On SignUpBtn Button.
        RetrieveDataBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Intent intent = new Intent(MainActivity.this, RetrieveData.class);
                startActivity(intent);
            }
        });

        // When Click On SignUpBtn Button.
        SignUpBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Intent intent = new Intent(MainActivity.this, SignUp.class);
                startActivity(intent);
            }
        });

    }

}

----------------------------------------------------------------------------------------------------------------
// activity_sign_up.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    tools:context=".SignUp">

    <EditText
        android:id="@+id/edit_text_username"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your User Name"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/edit_text_password"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Password"
        android:inputType="textPassword"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/edit_text_email"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Email"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/edit_text_phone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Phone"
        android:inputType="number"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <Button
        android:id="@+id/btn_register"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp"
        android:text="Register" />
</LinearLayout>

----------------------------------------------------------------------------------------------------------------
// SignUp.java


package com.example.android.firebaselearn;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.Toast;

import com.example.android.firebaselearn.Model.SignUpUsers;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.List;

public class SignUp extends AppCompatActivity {

    // Initialize Firebase Database.
    FirebaseDatabase firebaseDatabase;
    // Initialize Firebase Reference [Root].
    DatabaseReference reference;

    // EditViews.
    EditText UsreNameEdit, PasswordEdit, EmailEdit, PhoneEdit;

    // Btn
    Button Register;

    // Object Of SignUpUsers Class.
    SignUpUsers signUpUsers;

    // Counter For Number Of Users.
    // int counter = 1;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_up);

        // Start With Instance From Firebase Database Object.
        firebaseDatabase = FirebaseDatabase.getInstance();

        // Create OrgData As New Root Name.
        reference = firebaseDatabase.getReference("Users");

        // Get Views By IDs.
        UsreNameEdit = (EditText) findViewById(R.id.edit_text_username);
        PasswordEdit = (EditText) findViewById(R.id.edit_text_password);
        EmailEdit = (EditText) findViewById(R.id.edit_text_email);
        PhoneEdit = (EditText) findViewById(R.id.edit_text_phone);

        // Btn By Id.
        Register = (Button) findViewById(R.id.btn_register);

        // SignUpUsers Adapter Class [Setter & Getter].
        signUpUsers = new SignUpUsers();

        // When Click On Register Button.
        Register.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // Call getData() Method.
                getData();

                // Check If Data Not Null Before Store It Into Firebase Database.
                if (signUpUsers.getUserName() != null && !TextUtils.isEmpty(signUpUsers.getUserName())) {
                    // addListenerForSingleValueEvent Called [Once] When Make Change On Single Value.
                    reference.addListenerForSingleValueEvent(new ValueEventListener() {
                        @Override
                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                            // If User Exists.. Increase Counter By 1 And Check Again.
//                            while (dataSnapshot.child("User" + counter).exists()) {
//                                // Increase 1.
//                                counter++;
//                            }
                            // Store All Data From signUpUsers Adapter Class [Setter & Getter]
                            // Into [New User] With Unique Key [Phone No.] Into Firebase Database.
                            reference.child(signUpUsers.getPhone()).setValue(signUpUsers);

                            // Close This Activity When Finish.
                            SignUp.this.finish();
                        }

                        @Override
                        public void onCancelled(@NonNull DatabaseError databaseError) {

                        }
                    });
                }
            }
        });
    }

    // getData() Method.
    private void getData() {
        // Get All Input's User Data.
        String UserName = UsreNameEdit.getText().toString();
        String Password = PasswordEdit.getText().toString();
        String Email = EmailEdit.getText().toString();
        String Phone = PhoneEdit.getText().toString();

        // If All Inputs Are Filled.
        if (!TextUtils.isEmpty(UserName) && !TextUtils.isEmpty(Password) && !TextUtils.isEmpty(Email)
                && !TextUtils.isEmpty(Phone)) {

            // Set Data Into Set Methods Into SignUpUsers Adapter Class.
            signUpUsers.setUserName(UserName);
            signUpUsers.setPassword(Password);
            signUpUsers.setEmail(Email);
            signUpUsers.setPhone(Phone);

        } else
            Toast.makeText(this, "Fill All Fields..!!", Toast.LENGTH_SHORT).show();
    }
}

----------------------------------------------------------------------------------------------------------------

// SignUpUsers.java [Adapter Class (Setter & Getter)]

package com.example.android.firebaselearn.Model;

// Keys For Firebase Database.
public class SignUpUsers {
    private String userName;
    private String password;
    private String email;
    private String phone;

    public SignUpUsers() {
    }

    public SignUpUsers(String userName, String password, String email, String phone) {
        this.userName = userName;
        this.password = password;
        this.email = email;
        this.phone = phone;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }
}

----------------------------------------------------------------------------------------------------------------
// activity_retrieve_data.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".RetrieveData">

    <ListView
        android:id="@+id/retrieve_data"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:divider="#000"
        android:dividerHeight="10dp"
        android:minHeight="450dp" />

</LinearLayout>

----------------------------------------------------------------------------------------------------------------
// textviews_retrieve_data.xml

<!--Used For Handle Populate ListView-->
<?xml version="1.0" encoding="utf-8"?>
<!--    android:descendantFocusability="blocksDescendants"
If Item Of Listview Not Allow Clicking-->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:descendantFocusability="blocksDescendants"
    android:orientation="vertical">

    <TextView
        android:id="@+id/retrieve_username"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your User Name"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <TextView
        android:id="@+id/retrieve_password"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Password"
        android:inputType="textPassword"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <TextView
        android:id="@+id/retrieve_email"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Email"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <TextView
        android:id="@+id/retrieve_phone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Phone"
        android:inputType="number"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <!--<ImageView-->
        <!--android:id="@+id/retrieve_image"-->
        <!--android:layout_width="match_parent"-->
        <!--android:layout_height="wrap_content"-->
        <!--android:layout_marginBottom="16dp"-->
        <!--android:padding="16dp" />-->

</LinearLayout>

----------------------------------------------------------------------------------------------------------------
// RetrieveData.java

package com.example.android.firebaselearn;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;

import com.example.android.firebaselearn.Model.SignUpUsers;
import com.firebase.ui.database.FirebaseListAdapter;
import com.firebase.ui.database.FirebaseListOptions;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.Query;

public class RetrieveData extends AppCompatActivity {

    // ListView To Get Data From Firebase Database.
    ListView RetrieveDataLv;

    // FirebaseListAdapter is New Feature As ArrayList & ArrayAdapter.
    FirebaseListAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_retrieve_data);

        // Get Views By IDs.
        RetrieveDataLv = (ListView) findViewById(R.id.retrieve_data);

        // Query To Determine Which Path U Need To Get Data From.
        Query query = FirebaseDatabase.getInstance().getReference("Users");

        // FirebaseListOptions<ClassOfGetter&Setter>
        FirebaseListOptions<SignUpUsers> options = new FirebaseListOptions.Builder<SignUpUsers>()
                // Layout To Handle Retrieving Data Into It.
                .setLayout(R.layout.textviews_retrieve_data)
                // Get Data From Database & Adapt It Into [ClassOfGetter&Setter].class.
                .setQuery(query, SignUpUsers.class)
                // Call Start & Stop Override Methods.
                .setLifecycleOwner(RetrieveData.this)
                // Build It.
                .build();

        // Make Adapter.
        adapter = new FirebaseListAdapter(options) {
            @Override
            protected void populateView(@NonNull View v, @NonNull Object model, int position) {
                // Cast model Object To [ClassOfGetter&Setter].
                SignUpUsers user = (SignUpUsers) model;
                // v Of View Means Find IDs From [.setLayout(R.layout.textviews_retrieve_data)] In FirebaseListOptions
                TextView userName = v.findViewById(R.id.retrieve_username);
                TextView password = v.findViewById(R.id.retrieve_password);
                TextView email = v.findViewById(R.id.retrieve_email);
                TextView phone = v.findViewById(R.id.retrieve_phone);
//                ImageView image = v.findViewById(R.id.retrieve_image);

                // Set TextViews By Getting Data From Firebase Database.
                userName.setText(user.getUserName());
                password.setText(user.getPassword());
                email.setText(user.getEmail());
                phone.setText(user.getPhone());
                // Picasso To Get Image From Firebase Database.
//                Picasso.with(RetrieveDataLv.this).load(user.getImage()).into(image);
            }
        };
        // Active Adapter For ListView.
        RetrieveDataLv.setAdapter(adapter);

        // When Click On Items ListView.
        RetrieveDataLv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                // Get Item By Position And Cast It Into Adapter Class [SignUpUsers Getter & Setter].
                SignUpUsers user = (SignUpUsers) RetrieveDataLv.getItemAtPosition(i);
                // GoTo UpdateDeleteData Activity.
                Intent intent = new Intent(RetrieveData.this, UpdateDeleteData.class);
                // Take Some Of Value To The UpdateDeleteData Activity To Use Them There.
                intent.putExtra("userName", user.getUserName());
                intent.putExtra("password", user.getPassword());
                intent.putExtra("email", user.getEmail());
                intent.putExtra("phone", user.getPhone());
                // The Key As The Same No. Phone.
                intent.putExtra("key", user.getPhone());
                // Start Intent.
                startActivity(intent);
            }
        });
    }

    // When Start This Activity.
    @Override
    protected void onStart() {
        super.onStart();
        // Start Adapter Listening.
        adapter.startListening();
    }

    // When Stop This Activity.
    @Override
    protected void onStop() {
        super.onStop();
        // Stop Adapter Listening.
        adapter.stopListening();
    }
}

----------------------------------------------------------------------------------------------------------------
// activity_update_delete_data.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".UpdateDeleteData">

    <EditText
        android:id="@+id/update_delete_username"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your User Name"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/update_delete_password"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Password"
        android:inputType="textPassword"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/update_delete_email"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Email"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/update_delete_phone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:hint="Enter Your Phone"
        android:inputType="number"
        android:padding="16dp"
        android:singleLine="true"
        android:text="" />

    <Button
        android:id="@+id/btn_update"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp"
        android:text="Update" />

    <Button
        android:id="@+id/btn_delete"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="16dp"
        android:text="Delete" />

</LinearLayout>

----------------------------------------------------------------------------------------------------------------
// UpdateDeleteData.java

package com.example.android.firebaselearn;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class UpdateDeleteData extends AppCompatActivity {

    // Views To Store Receiving Data From RetrieveData.java.
    EditText UserName, Password, Email, Phone;

    //Btns.
    Button UpdateBtn, DeleteBtn;

    // Store The Old Ke [No. Phone In This Case].
    String Key;

    // Init Firebase Database.
    FirebaseDatabase database;

    // Init Ref.
    DatabaseReference reference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_update_delete_data);

        // Get Views By IDs.
        UserName = (EditText) findViewById(R.id.update_delete_username);
        Password = (EditText) findViewById(R.id.update_delete_password);
        Email = (EditText) findViewById(R.id.update_delete_email);
        Phone = (EditText) findViewById(R.id.update_delete_phone);

        UpdateBtn = (Button) findViewById(R.id.btn_update);
        DeleteBtn = (Button) findViewById(R.id.btn_delete);

        // Get extras From Intent getExtras.
        Bundle extras = getIntent().getExtras();
        if (extras != null) {
            // setText Of EditText username By Value From List View In Previous Activity [Intent].
            UserName.setText(extras.getString("userName"));
            // setText Of EditText password By Value From List View In Previous Activity  [Intent].
            Password.setText(extras.getString("password"));
            // setText Of EditText email By Value From List View In Previous Activity  [Intent].
            Email.setText(extras.getString("email"));
            // setText Of EditText phone By Value From List View In Previous Activity  [Intent].
            Phone.setText(extras.getString("phone"));
            // Get Key Of User To Allow U Change, Update Or Delete His Data.
            Key = extras.getString("key");
        }

        // Get Instance Of Database.
        database = FirebaseDatabase.getInstance();
        // The Specific Key & Values Need To Update Or Delete.
        reference = database.getReference("Users").child(Key);

        // When Press On Update Btn.
        UpdateBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // Listen For Single Value.
                reference.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {

                        /** HINT:
                         *  Because We Can't Change NAME OF KEY In Firebase, And We Want Change It.
                         *  So We Will Make Copy Data Into New Key [New No. Phone] In This Case.
                         *  And Will Remove Old Key [Old No. Phone] With Old Original Data.
                         *
                         *  Key >> Old No. Phone.
                         *  Phone.getText().toString() >> New No. Phone.
                         */

                        // If The Key [No. Phone In This Case] Is Changed.
                        if (!(Phone.getText().toString()).equals(Key)) {
                            // Make New Key & Take Copy From Original Data Into It.
                            reference = database.getReference("Users").child(Phone.getText().toString());
                            reference.child("userName").setValue(UserName.getText().toString());
                            reference.child("password").setValue(Password.getText().toString());
                            reference.child("email").setValue(Email.getText().toString());
                            reference.child("phone").setValue(Phone.getText().toString());

                            // And Remove old Key With Old Original Data.
                            reference = database.getReference("Users").child(Key);
                            reference.removeValue();

                            Toast.makeText(UpdateDeleteData.this, "Data Is Updated", Toast.LENGTH_SHORT).show();

                            // Close This Activity When Finish.
                            UpdateDeleteData.this.finish();
                        }
                        // If Key [No. Phone In This Case] Not Changed.
                        else {
                            // Update Original Data.
                            reference.child("userName").setValue(UserName.getText().toString());
                            reference.child("password").setValue(Password.getText().toString());
                            reference.child("email").setValue(Email.getText().toString());

                            Toast.makeText(UpdateDeleteData.this, "Data Is Updated", Toast.LENGTH_SHORT).show();

                            // Close This Activity When Finish.
                            UpdateDeleteData.this.finish();
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError databaseError) {

                    }
                });
            }
        });

        // When Press On Delete Btn.
        DeleteBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // Remove All Value Of This reference.
                reference.removeValue();

                Toast.makeText(UpdateDeleteData.this, "Data Is Removed", Toast.LENGTH_SHORT).show();

                // Close This Activity When Finish.
                UpdateDeleteData.this.finish();

            }
        });
    }
}





















