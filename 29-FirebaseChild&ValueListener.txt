-----------------------------------------------------------------------------------------------------------------
// activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/edit_text_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:hint="Enter Your Name"
        android:singleLine="true"
        android:text="" />

    <EditText
        android:id="@+id/edit_text_phone"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:hint="Enter Your Phone"
        android:singleLine="true"
        android:inputType="number"
        android:text="" />

    <Button
        android:id="@+id/btn_store_data"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Store Your Data" />

    <ListView
        android:id="@+id/list_user_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:divider="#ffffff"
        android:dividerHeight="2dp"
        android:minHeight="450dp" />

</LinearLayout>
-----------------------------------------------------------------------------------------------------------------
// Class Called Info.

package com.example.android.firebaselearn;

public class Info {
    private String Name;
    private String Phone;

    public Info() {
    }

    public Info(String name, String phone) {
        Name = name;
        Phone = phone;
    }

    public String getName() {
        return Name;
    }

    public void setName(String name) {
        Name = name;
    }

    public String getPhone() {
        return Phone;
    }

    public void setPhone(String phone) {
        Phone = phone;
    }
}
-----------------------------------------------------------------------------------------------------------------
// MainActivity.java

package com.example.android.firebaselearn;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.ArrayList;
import java.util.Map;

public class MainActivity extends AppCompatActivity {

    // Initialize Views.
    EditText editTextName;
    EditText editTextPhone;
    Button storeData;

    // Create Array List For List View To Show All Data.
    ArrayList<String> ValueItem;

    // Create Array Adapter For List View To Show All Data.
    ArrayAdapter adapter;

    // Create List View To Show All Data.
    ListView UserList;

    // Initialize Firebase Database.
    FirebaseDatabase firebaseDatabase;
    // Initialize Firebase Reference [Root].
    DatabaseReference mDatabaseReference;

    // Class Called Info To Set & Get Keys.
    Info info;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Start With Instance From Firebase Database Object.
        firebaseDatabase = FirebaseDatabase.getInstance();

        // Create OrgData As New Root Name.
        mDatabaseReference = firebaseDatabase.getReference().child("OrgData");

        // Get Views By IDs.
        editTextName = (EditText) findViewById(R.id.edit_text_name);
        editTextPhone = (EditText) findViewById(R.id.edit_text_phone);
        storeData = (Button) findViewById(R.id.btn_store_data);

        // Get ListView By ID.
        UserList = (ListView) findViewById(R.id.list_user_view);

        // Create New Array List.
        ValueItem = new ArrayList<>();

        //Set Adapter For List View.
        adapter = new ArrayAdapter(this, R.layout.list_form, R.id.rowTextView, ValueItem);
        UserList.setAdapter(adapter);

        // When Click On storeData Button.
        storeData.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Information();
            }
        });

       // addValueEventListener Get All Value In Firebase Need Enhanced For Loop To Handle Them.
        mDatabaseReference.child("UserInfo").addValueEventListener(new ValueEventListener() {
//            @Override
//            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
//                // Clear ArrayList To Prevent Repeating Items When Listen To Change In Database [As Refresh ArrayList]
//                ValueItem.clear();
//                // Enhanced For Loop.
//                // dataSnapshot.getChildren() >> Get Values Of All Children Into "UserInfo" In Database.
//                for (DataSnapshot ds : dataSnapshot.getChildren()) {
//                    // ds.getValue(Info.class) >> Get All Value Of Child Has Change From Database
//                    // And Put It Into Info Class.
//                    Info info = ds.getValue(Info.class);
//
//                    // Add Name & Phone Into Array List.
//                    ValueItem.add(info.getName() + " " + info.getPhone());
//
//                    // Make Adapter Know About Any Changes.
//                    adapter.notifyDataSetChanged();
//                }
//            }
//
//            @Override
//            public void onCancelled(@NonNull DatabaseError databaseError) {
//
//            }
//        });

        // addChildEventListener Get All Children & Values In Firebase Need Map To Handle Them As [Key & Value].
        mDatabaseReference.child("UserInfo").addChildEventListener(new ChildEventListener() {
            @Override
            // onChildAdded As A Loop Get All Children In Firebase & Any New Child.
            public void onChildAdded(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

                // Get All Info From Firebase & Cast It Into Map To Make Them As [Key, Value].
                Map<String, String> map = (Map) dataSnapshot.getValue();

                // Get Values Of Keys [name, phone] From Map.
                String Name = map.get("name");
                String Phone = map.get("phone");

                // Add Name & Phone To ArrayList.
                ValueItem.add(Name);
                ValueItem.add(Phone);

                // dataSnapshot.getKey() is Key Of Values In This Case [Phone No.].
                //ValueItem.add(dataSnapshot.getKey());

                // Make Adapter Know About Any Changes.
                adapter.notifyDataSetChanged();

                Toast.makeText(MainActivity.this, "Add Values ", Toast.LENGTH_SHORT).show();

            }

            @Override
            // Called When Make Change On Child.
            public void onChildChanged(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

            }
            @Override
            // Called When Make Remove Child.
            public void onChildRemoved(@NonNull DataSnapshot dataSnapshot) {

            }

            @Override
            public void onChildMoved(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {
            }
        });

    }

    private void Information() {
        // Get Data Input From User As Key.

        final String getName = editTextName.getText().toString();
        // Get Data Input From User As Value.
        final String getPhone = editTextPhone.getText().toString();

        if (!TextUtils.isEmpty(getName) && !TextUtils.isEmpty(getPhone)) {
            //  String getKey = mDatabaseReference.push().toString();

            // Class Called Info.
            info = new Info(getName, getPhone);
            // Create Child For OrgData Root Called Data & Child For Data Called Value Of [getKey]
            // Has Value As Value Of [getValue].
            mDatabaseReference.child("UserInfo").child(getPhone).setValue(info);

            // Clear EditTexts.
            editTextName.setText("");
            editTextPhone.setText("");

        } else
            Toast.makeText(MainActivity.this, "Fill All Fields..!!", Toast.LENGTH_SHORT).show();
    }
}
